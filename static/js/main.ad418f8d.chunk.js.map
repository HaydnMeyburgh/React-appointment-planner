{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","selected","value","map","contact","index","name","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","placeholder","type","target","min","Date","toLocaleDateString","split","month","day","year","padStart","className","Tile","arr","Object","values","TileList","info","AppointmentsPage","appointments","addAppointment","useState","e","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","duplicateCheck","setDuplicateCheck","useEffect","alert","event","App","ROUTES","setContacts","setAppointments","to","activeClassName","exact","path","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad418f8d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, onChange}) => {\r\n  return (\r\n    <div>\r\n      <select onChange={onChange}>\r\n        <option selected='selected' key={-1} value='Please select'>Please Select Your contact details</option>\r\n        {contacts.map((contact, index) => (\r\n          <option key={contact[index]} value={contact.name}>{contact.name}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {ContactPicker} from '../contactPicker/ContactPicker.js';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    // AppointmentForm\r\n    <form onSubmit={handleSubmit}>\r\n      <input placeholder=\"Title\"\r\n        type=\"text\"\r\n        name=\"title\" \r\n        value={title} \r\n        onChange={({target}) => setTitle(target.value)}/>\r\n      <input placeholder=\"date\"\r\n        type='date'\r\n        name=\"date\"\r\n        value={date} \r\n        min={getTodayString}\r\n        onChange={({target}) => setDate(target.value)} />\r\n      <input placeholder=\"time\"\r\n        type='time'\r\n        name=\"time\"\r\n        value={time} \r\n        onChange={({target}) => setTime(target.value)}/>\r\n      <ContactPicker className=\"contact-picker\" contacts={contacts} \r\n        value={contact} \r\n        name='contact' \r\n        onChange={({target}) => setContact(target.value)} />\r\n      <input type='submit' value='Submit'/>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({value}) => {\r\n\r\n  const arr = Object.values(value)\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {arr.map((values, index) => {\r\n        if (index === 0) {\r\n          return  <p className=\"tile-title\" key={index}>{values}</p>;\r\n        } else {\r\n          return <p className=\"tile\" key={index}>{values}</p>;\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from '../tile/Tile.js';\r\n\r\nexport const TileList = ({info}) => {\r\n  return (\r\n    <div>\r\n      {info.map((contact, index) => (\r\n        <Tile key={index} \r\n          value={contact} \r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {AppointmentForm} from '../../components/appointmentForm/AppointmentForm.js';\r\nimport {TileList} from '../../components/tileList/TileList.js';\r\n\r\nexport const AppointmentsPage = ({contacts, appointments, addAppointment}) => {\r\n  const [title, setTitle] = useState('')\r\n  const [contact, setContact] = useState('')\r\n  const [date, setDate] = useState('')\r\n  const [time, setTime] = useState('')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n   addAppointment(title, contact, date, time);\r\n   setTitle('');\r\n   setContact('');\r\n   setDate('');\r\n   setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          contacts={contacts}\r\n          title={title}\r\n          setTitle={setTitle}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList \r\n          info={appointments}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input placeholder=\"Name\" \r\n        type='text' \r\n        name=\"name\"\r\n        value={name} \r\n        onChange={({target}) => setName(target.value)}\r\n      />\r\n      <input placeholder=\"Email\" \r\n        type='email' \r\n        name=\"email\" \r\n        value={email}\r\n        onChange={({target}) => setEmail(target.value)}\r\n      />\r\n      <input placeholder=\"Phone Number\" \r\n        type='tel' \r\n        name=\"phone\" \r\n        value={phone} \r\n        pattern=\"^(27|0)[0-9]{9}\"\r\n        onChange={({target}) => setPhone(target.value)} \r\n      />\r\n      <input type='submit' />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from '../../components/contactForm/ContactForm.js';\r\nimport { TileList } from '../../components/tileList/TileList.js';\r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicateCheck, setDuplicateCheck] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Add contact info and clear data if the contact name is not a duplicate\r\n    if (duplicateCheck === false) {\r\n      addContact(name, phone, email);\r\n      setEmail('');\r\n      setName('');\r\n      setPhone('');\r\n    } \r\n  };\r\n  \r\n  //check for contact name in the contacts array variable in props  \r\n  useEffect(() => { //useEffect isnt being called when the name state is changing... Need to fix this as duplicateCheck remains true even if name state is changed\r\n    for (const contact of contacts){\r\n      if (name === contact.name) {\r\n        alert('This name is a duplicate, please use another');\r\n        setDuplicateCheck(true);\r\n      }\r\n    }\r\n  }, [name, contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm  \r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        /> \r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList info={contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState} from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const [contacts, setContacts] = useState([{\r\n    name: 'Haydn',\r\n    phone: '0791751751',\r\n    email: 'haydn@gmail.com'\r\n  }]);\r\n\r\n  const addContact = (name, phone, email) => {\r\n    setContacts(prev => [...prev, {name: name, phone: phone, email: email}]);\r\n  };\r\n  \r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments(prev => [...prev, {title: title, contact: contact, date: date, time: time}]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage \r\n              contacts={contacts}\r\n              addContact={addContact}\r\n            />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage\r\n              contacts={contacts} \r\n              appointments={appointments}\r\n              addAppointment={addAppointment}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}